{"version":3,"sources":["../src/graphqlServer.js"],"names":["playground","require","default","GRAPHQL_PORT","helperMiddleware","bodyParser","json","text","type","req","res","next","is","body","query","console","log","JSON","stringify","graphQLServer","use","express","static","schema","endpointURL","endpoint","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AAIA;;;;;;AAFA,MAAMA,aAAaC,QAAQ,uCAAR,EAAiDC,OAApE;;AAIA,MAAMC,eAAe,IAArB;;AAEA,MAAMC,mBAAmB,CACxBC,qBAAWC,IAAX,EADwB,EAExBD,qBAAWE,IAAX,CAAgB,EAACC,MAAM,qBAAP,EAAhB,CAFwB,EAGxB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnB,KAAIF,IAAIG,EAAJ,CAAO,qBAAP,CAAJ,EAAmC;AAClCH,MAAII,IAAJ,GAAW,EAACC,OAAOL,IAAII,IAAZ,EAAX;AACA;;AAEDE,SAAQC,GAAR,CAAY,MAAZ,EAAoBC,KAAKC,SAAL,CAAeT,IAAII,IAAnB,CAApB;AACAF;AACA,CAVuB,EAWxB,8CAXwB,CAAzB;;AAcA,MAAMQ,gBAAgB,wBAAtB;AACAA,cAAcC,GAAd,CAAkB,qBAAlB;AACAD,cAAcC,GAAd,CAAkB,SAAlB,EAA6BC,kBAAQC,MAAR,CAAe,UAAf,CAA7B;AACAH,cAAcC,GAAd,CAAkB,UAAlB,EAA8B,GAAGhB,gBAAjC,EAAmD,yCAAe,EAACmB,wBAAD,EAAf,CAAnD;AACAJ,cAAcC,GAAd,CAAkB,WAAlB,EAA+B,0CAAgB,EAACI,aAAa,UAAd,EAAhB,CAA/B;AACAL,cAAcC,GAAd,CAAkB,aAAlB,EAAiCpB,WAAW,EAACyB,UAAU,UAAX,EAAX,CAAjC;;AAEAN,cAAcO,MAAd,CAAqBvB,YAArB,EAAmC,MAClCY,QAAQC,GAAR,CACE,+CAA8Cb,YAAa,WAD7D,CADD","file":"graphqlServer.js","sourcesContent":["import express from 'express';\nimport cors from 'cors';\nimport {graphqlExpress, graphiqlExpress} from 'apollo-server-express';\nimport bodyParser from 'body-parser';\nimport {apolloUploadExpress} from 'apollo-upload-server'\n\nconst playground = require('graphql-playground-middleware-express').default;\n\nimport schema from './graphqlData/schema';\n\nconst GRAPHQL_PORT = 4000;\n\nconst helperMiddleware = [\n\tbodyParser.json(),\n\tbodyParser.text({type: 'application/graphql'}),\n\t(req, res, next) => {\n\t\tif (req.is('application/graphql')) {\n\t\t\treq.body = {query: req.body};\n\t\t}\n\t\t\n\t\tconsole.log(\"body\", JSON.stringify(req.body));\n\t\tnext();\n\t},\n\tapolloUploadExpress(/* Options */),\n];\n\nconst graphQLServer = express();\ngraphQLServer.use(cors());\ngraphQLServer.use('/assets', express.static('./assets'));\ngraphQLServer.use('/graphql', ...helperMiddleware, graphqlExpress({schema}));\ngraphQLServer.use('/graphiql', graphiqlExpress({endpointURL: '/graphql'}));\ngraphQLServer.use('/playground', playground({endpoint: '/graphql'}));\n\ngraphQLServer.listen(GRAPHQL_PORT, () =>\n\tconsole.log(\n\t\t`GraphiQL is now running on http://localhost:${GRAPHQL_PORT}/graphiql`\n\t)\n);"]}